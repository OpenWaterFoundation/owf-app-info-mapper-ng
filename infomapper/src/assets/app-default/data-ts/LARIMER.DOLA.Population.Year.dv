# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 13.03.00dev (2020-06-11)
# user:         sam
# date:         Tue Jul 28 01:53:48 America/Denver 2020
# host:         RoaringFork
# directory:    C:\Users\sam\owf-dev\InfoMapper-Poudre\git-repos\owf-infomapper-poudre\workflow\BasinEntities\Physical-Counties
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\owf-dev\InfoMapper-Poudre\git-repos\owf-infomapper-poudre\workflow\BasinEntities\Physical-Counties\02-create-population-graph-config.tstool"
# Commands: 
# # Create county population graph configurations
# # - download population data from Colorado Information Marketplace
# # - convert data into time series files for each county
# # - create graph configurations that are used by map popup
# # - files are written directly to the web folder
# #
# # Define properties to control processing.
# # - use relative paths so that the command file is portable
# # - AssetsFolder is where map files exist for the InfoMapper tool
# SetProperty(PropertyName="AppFolder",PropertyType=String,PropertyValue="../../../web")
# SetProperty(PropertyName="MapsFolder",PropertyType=String,PropertyValue="${AppFolder}/data-maps")
# SetProperty(PropertyName="MapFolder",PropertyType=String,PropertyValue="${MapsFolder}/BasinEntities/Physical-Counties")
# SetProperty(PropertyName="TsFolder",PropertyType=String,PropertyValue="${MapFolder}/ts")
# CreateFolder(Folder="${TsFolder}",CreateParentFolders=True,IfFolderExists=Ignore)
# #
# # Download the population data and convert floaging point population to integer
# WebGet(URI="https://data.colorado.gov/resource/9dd2-kw29.csv",LocalFile="downloads/population-data.csv")
# ReadTableFromDelimitedFile(TableID="county-population-table",InputFile="downloads/population-data.csv",HeaderLines="1",DateTimeColumns="year")
# ManipulateTableString(TableID="county-population-table",InputColumn1="totalpopulation",Operator="ToInteger",OutputColumn="totalpopulation2")
# ManipulateTableString(TableID="county-population-table",InputColumn1="county",Operator="ToUpperCase",OutputColumn="county")
# #
# # Get the list of unique counties
# CopyTable(TableID="county-population-table",NewTableID="counties-table",IncludeColumns="county",DistinctColumns="county")
# SortTable(TableID="counties-table",SortColumns="county")
# #
# # Loop through the counties and create output for each
# For(Name="county",TableID="counties-table",TableColumn="county")
# CopyTable(TableID="county-population-table",NewTableID="county-population-${county}",ColumnFilters="county:${county}")
# SortTable(TableID="county-population-${county}",SortColumns="year")
# TableToTimeSeries(TableID="county-population-${county}",DateTimeColumn="year",LocationColumn="county",ValueColumn="totalpopulation2",DataSource="DOLA",DataType="Population",Interval=Year,Units="persons",Alias="${county}-population")
# #
# # Copy the time series and fill enough to be able to do a line graph
# Copy(TSID="${county}-population",NewTSID="${county}.DOLA.Population.Year.filled",Alias="${county}-population-filled")
# FillInterpolate(TSList=AllMatchingTSID,TSID="${county}-population-filled",MaxIntervals=0,FillStart="1990",FillEnd="2010")
# WriteDelimitedFile(TSList=AllMatchingTSID,TSID="${county}-population",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.csv",DateTimeColumn="year",ValueColumns="population")
# WriteDateValue(TSList=AllMatchingTSID,TSID="${county}-population",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.dv")
# WriteDelimitedFile(TSList=AllMatchingTSID,TSID="${county}-population-filled",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.filled.csv",DateTimeColumn="year",ValueColumns="population")
# WriteDateValue(TSList=AllMatchingTSID,TSID="${county}-population-filled",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.filled.dv")
# EndFor(Name="county")
# #
# # Create graph template for use with InfoMapper
# # - only need to do this once
# # - use Larimer County as the example
# ProcessTSProduct(TSProductFile="graphs/county-population-graph-config.tsp",View=False,OutputFile="graphs/county-population-graph-prototype.png",OutputProductFile="graphs/county-population-graph-config-prototype.json",OutputProductFormat="JSON")
# #
# # Convert the prototype graph into a template by replacing strings with ${Property} notation
# # - convert prototype LARIMER to property that can be filled by InfoMapper
# TextEdit(InputFile="graphs/county-population-graph-config-prototype.json",SearchFor="LARIMER",ReplaceWith="\$\{featureAttribute:county}",OutputFile="graphs/county-population-graph-config.json")
# # Always convert to Linux-like line endings if processing full lines to simplify processing
# # - TODO smalers 2020-06-22 this is actually not needed since not replacing entire line
# #TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="\r\n",ReplaceWith="\n",OutputFile="graphs/county-population-graph-config.json")
# # Edit TSID
# # - first part of the string will have been replaced above
# # - final step corrects a replace from previous steps
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year",ReplaceWith="Population\.Year~DateValue~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.dv",OutputFile="graphs/county-population-graph-config.json")
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year.filled",ReplaceWith="Population\.Year\.filled~DateValue~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.filled\.dv",OutputFile="graphs/county-population-graph-config.json")
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="dv.filled",ReplaceWith="filled\.dv",OutputFile="graphs/county-population-graph-config.json")
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "LARIMER.DOLA.Population.Year"
Alias       = "LARIMER-population"
Description = "LARIMER Population"
DataType    = "Population"
Units       = "persons"
MissingVal  = NaN
Start       = 1992
End         = 2035
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=LARIMER.DOLA.Population.Year Alias=LARIMER-population):
#
#   Created new time series with interval determined from TSID "LARIMER.DOLA.Population.Year"
#
#EndHeader
Date "LARIMER-population, persons"
1992 199664.0000
1993 206849.0000
1994 NaN
1995 221626.0000
1996 227251.0000
1997 NaN
1998 NaN
1999 NaN
2000 NaN
2001 NaN
2002 NaN
2003 NaN
2004 NaN
2005 NaN
2006 NaN
2007 286754.0000
2008 292394.0000
2009 NaN
2010 NaN
2011 NaN
2012 NaN
2013 315983.0000
2014 NaN
2015 NaN
2016 338704.0000
2017 NaN
2018 349079.0000
2019 NaN
2020 359181.0000
2021 NaN
2022 371864.0000
2023 NaN
2024 NaN
2025 NaN
2026 NaN
2027 NaN
2028 411630.0000
2029 NaN
2030 NaN
2031 430161.0000
2032 436208.0000
2033 442186.0000
2034 NaN
2035 453939.0000
