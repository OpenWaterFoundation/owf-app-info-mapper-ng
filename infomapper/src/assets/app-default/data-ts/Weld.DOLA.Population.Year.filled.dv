# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 13.03.00dev (2020-08-11)
# user:         sam
# date:         Mon Aug 17 14:53:07 America/Denver 2020
# host:         RoaringFork
# directory:    C:\Users\sam\owf-dev\InfoMapper-Poudre\git-repos\owf-infomapper-poudre\workflow\BasinEntities\Political-Counties
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\owf-dev\InfoMapper-Poudre\git-repos\owf-infomapper-poudre\workflow\BasinEntities\Political-Counties\02-create-population-graph-config.tstool"
# Commands: 
# # Create county population graph configurations
# # - download population data from Colorado Information Marketplace
# # - convert data into time series files for each county
# # - create graph configurations that are used by map popup
# # - files are written directly to the web folder
# #
# # Define properties to control processing.
# # - use relative paths so that the command file is portable
# # - AssetsFolder is where map files exist for the InfoMapper tool
# SetProperty(PropertyName="AppFolder",PropertyType=String,PropertyValue="../../../web")
# SetProperty(PropertyName="MapsFolder",PropertyType=String,PropertyValue="${AppFolder}/data-maps")
# SetProperty(PropertyName="MapFolder",PropertyType=String,PropertyValue="${MapsFolder}/BasinEntities/Political-Counties")
# SetProperty(PropertyName="TsFolder",PropertyType=String,PropertyValue="${MapFolder}/ts")
# CreateFolder(Folder="${TsFolder}",CreateParentFolders=True,IfFolderExists=Ignore)
# #
# # Download the population data and convert floaging point population to integer
# WebGet(URI="https://data.colorado.gov/resource/9dd2-kw29.csv",LocalFile="downloads/population-data.csv")
# ReadTableFromDelimitedFile(TableID="county-population-table",InputFile="downloads/population-data.csv",HeaderLines="1",DateTimeColumns="year")
# ManipulateTableString(TableID="county-population-table",InputColumn1="totalpopulation",Operator="ToInteger",OutputColumn="totalpopulation2")
# ManipulateTableString(TableID="county-population-table",InputColumn1="county",Operator="ToUpperCase",OutputColumn="county")
# #
# # Get the list of unique counties
# CopyTable(TableID="county-population-table",NewTableID="counties-table",IncludeColumns="county",DistinctColumns="county")
# SortTable(TableID="counties-table",SortColumns="county")
# #
# # Loop through the counties and create output for each
# For(Name="county",TableID="counties-table",TableColumn="county")
# CopyTable(TableID="county-population-table",NewTableID="county-population-${county}",ColumnFilters="county:${county}")
# SortTable(TableID="county-population-${county}",SortColumns="year")
# TableToTimeSeries(TableID="county-population-${county}",DateTimeColumn="year",LocationColumn="county",ValueColumn="totalpopulation2",DataSource="DOLA",DataType="Population",Interval=Year,Units="persons",Alias="${county}-population")
# #
# # Copy the time series and fill to make it easier to evaluate trends
# Copy(TSID="${county}-population",NewTSID="${county}.DOLA.Population.Year.filled",Alias="${county}-population-filled")
# FillInterpolate(TSList=AllMatchingTSID,TSID="${county}-population-filled",MaxIntervals=0)
# WriteDelimitedFile(TSList=AllMatchingTSID,TSID="${county}-population",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.csv",DateTimeColumn="year",ValueColumns="population")
# WriteDateValue(TSList=AllMatchingTSID,TSID="${county}-population",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.dv")
# WriteDelimitedFile(TSList=AllMatchingTSID,TSID="${county}-population-filled",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.filled.csv",DateTimeColumn="year",ValueColumns="population")
# WriteDateValue(TSList=AllMatchingTSID,TSID="${county}-population-filled",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.filled.dv")
# EndFor(Name="county")
# #
# # Create graph template for use with InfoMapper
# # - only need to do this once
# # - use Larimer County as the example
# ProcessTSProduct(TSProductFile="graphs/county-population-graph-config.tsp",View=True,OutputFile="graphs/county-population-graph-prototype.png",OutputProductFile="graphs/county-population-graph-config-prototype.json",OutputProductFormat="JSON")
# #
# # Convert the prototype graph into a template by replacing strings with ${Property} notation
# # - convert prototype LARIMER to property that can be filled by InfoMapper
# TextEdit(InputFile="graphs/county-population-graph-config-prototype.json",SearchFor="LARIMER",ReplaceWith="\$\{featureAttribute:county}",OutputFile="graphs/county-population-graph-config.json")
# # Always convert to Linux-like line endings if processing full lines to simplify processing
# # - TODO smalers 2020-06-22 this is actually not needed since not replacing entire line
# #TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="\r\n",ReplaceWith="\n",OutputFile="graphs/county-population-graph-config.json")
# # Edit TSID
# # - first part of the string will have been replaced above
# # - final step corrects a replace from previous steps
# # - uncomment DateValue version when that format is supported
# # TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year",ReplaceWith="Population\.Year~DateValue~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.dv",OutputFile="graphs/county-population-graph-config.json")
# # TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year.filled",ReplaceWith="Population\.Year\.filled~DateValue~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.filled\.dv",OutputFile="graphs/county-population-graph-config.json")
# #TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="dv.filled",ReplaceWith="filled\.dv",OutputFile="graphs/county-population-graph-config.json")
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year",ReplaceWith="Population\.Year~csv~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.csv",OutputFile="graphs/county-population-graph-config.json")
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year.filled",ReplaceWith="Population\.Year\.filled~csv~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.filled\.csv",OutputFile="graphs/county-population-graph-config.json")
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="csv.filled",ReplaceWith="filled\.csv",OutputFile="graphs/county-population-graph-config.json")
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "WELD.DOLA.Population.Year.filled"
Alias       = "WELD-population-filled"
Description = "WELD Population,fill interpolate"
DataType    = "Population"
Units       = "persons"
MissingVal  = NaN
Start       = 1997
End         = 2049
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=WELD.DOLA.Population.Year.filled Alias=WELD-population-filled):
#
#   Created new time series with interval determined from TSID "WELD.DOLA.Population.Year"
#   Made a copy of TSID="WELD.DOLA.Population.Year" Alias="WELD-population" (previous history information is for original)
#   Copied TSID="WELD.DOLA.Population.Year" Alias="WELD-population"
#   Filled 37 missing values 1997 to 2049 using linear interpolation from known values, no limit to number of intervals in a gap to fill.
#
#EndHeader
Date "WELD-population-filled, persons"
1997 166839.0000
1998 172393.0000
1999 177733.5000
2000 183074.0000
2001 191024.5000
2002 198975.0000
2003 206522.0000
2004 214069.0000
2005 222676.0000
2006 231283.0000
2007 236709.3333
2008 242135.6667
2009 247562.0000
2010 252988.3333
2011 258414.6667
2012 263841.0000
2013 271959.8000
2014 280078.6000
2015 288197.4000
2016 296316.2000
2017 304435.0000
2018 314832.6667
2019 325230.3333
2020 335628.0000
2021 346025.6667
2022 356423.3333
2023 366821.0000
2024 379013.0000
2025 391307.0000
2026 403718.0000
2027 416143.7500
2028 428569.5000
2029 440995.2500
2030 453421.0000
2031 466123.7778
2032 478826.5556
2033 491529.3333
2034 504232.1111
2035 516934.8889
2036 529637.6667
2037 542340.4444
2038 555043.2222
2039 567746.0000
2040 580632.3750
2041 593518.7500
2042 606405.1250
2043 619291.5000
2044 632177.8750
2045 645064.2500
2046 657950.6250
2047 670837.0000
2048 683853.5000
2049 696870.0000
