# DateValueTS 1.6 file
# File generated by...
# program:      TSTool 13.03.00dev (2020-08-11)
# user:         sam
# date:         Mon Aug 17 14:53:07 America/Denver 2020
# host:         RoaringFork
# directory:    C:\Users\sam\owf-dev\InfoMapper-Poudre\git-repos\owf-infomapper-poudre\workflow\BasinEntities\Political-Counties
# command line: TSTool
#  -home test/operational/CDSS
# -----------------------------------------------------------------------
# Command file name: "C:\Users\sam\owf-dev\InfoMapper-Poudre\git-repos\owf-infomapper-poudre\workflow\BasinEntities\Political-Counties\02-create-population-graph-config.tstool"
# Commands: 
# # Create county population graph configurations
# # - download population data from Colorado Information Marketplace
# # - convert data into time series files for each county
# # - create graph configurations that are used by map popup
# # - files are written directly to the web folder
# #
# # Define properties to control processing.
# # - use relative paths so that the command file is portable
# # - AssetsFolder is where map files exist for the InfoMapper tool
# SetProperty(PropertyName="AppFolder",PropertyType=String,PropertyValue="../../../web")
# SetProperty(PropertyName="MapsFolder",PropertyType=String,PropertyValue="${AppFolder}/data-maps")
# SetProperty(PropertyName="MapFolder",PropertyType=String,PropertyValue="${MapsFolder}/BasinEntities/Political-Counties")
# SetProperty(PropertyName="TsFolder",PropertyType=String,PropertyValue="${MapFolder}/ts")
# CreateFolder(Folder="${TsFolder}",CreateParentFolders=True,IfFolderExists=Ignore)
# #
# # Download the population data and convert floaging point population to integer
# WebGet(URI="https://data.colorado.gov/resource/9dd2-kw29.csv",LocalFile="downloads/population-data.csv")
# ReadTableFromDelimitedFile(TableID="county-population-table",InputFile="downloads/population-data.csv",HeaderLines="1",DateTimeColumns="year")
# ManipulateTableString(TableID="county-population-table",InputColumn1="totalpopulation",Operator="ToInteger",OutputColumn="totalpopulation2")
# ManipulateTableString(TableID="county-population-table",InputColumn1="county",Operator="ToUpperCase",OutputColumn="county")
# #
# # Get the list of unique counties
# CopyTable(TableID="county-population-table",NewTableID="counties-table",IncludeColumns="county",DistinctColumns="county")
# SortTable(TableID="counties-table",SortColumns="county")
# #
# # Loop through the counties and create output for each
# For(Name="county",TableID="counties-table",TableColumn="county")
# CopyTable(TableID="county-population-table",NewTableID="county-population-${county}",ColumnFilters="county:${county}")
# SortTable(TableID="county-population-${county}",SortColumns="year")
# TableToTimeSeries(TableID="county-population-${county}",DateTimeColumn="year",LocationColumn="county",ValueColumn="totalpopulation2",DataSource="DOLA",DataType="Population",Interval=Year,Units="persons",Alias="${county}-population")
# #
# # Copy the time series and fill to make it easier to evaluate trends
# Copy(TSID="${county}-population",NewTSID="${county}.DOLA.Population.Year.filled",Alias="${county}-population-filled")
# FillInterpolate(TSList=AllMatchingTSID,TSID="${county}-population-filled",MaxIntervals=0)
# WriteDelimitedFile(TSList=AllMatchingTSID,TSID="${county}-population",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.csv",DateTimeColumn="year",ValueColumns="population")
# WriteDateValue(TSList=AllMatchingTSID,TSID="${county}-population",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.dv")
# WriteDelimitedFile(TSList=AllMatchingTSID,TSID="${county}-population-filled",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.filled.csv",DateTimeColumn="year",ValueColumns="population")
# WriteDateValue(TSList=AllMatchingTSID,TSID="${county}-population-filled",OutputFile="${TsFolder}/${county}.DOLA.Population.Year.filled.dv")
# EndFor(Name="county")
# #
# # Create graph template for use with InfoMapper
# # - only need to do this once
# # - use Larimer County as the example
# ProcessTSProduct(TSProductFile="graphs/county-population-graph-config.tsp",View=True,OutputFile="graphs/county-population-graph-prototype.png",OutputProductFile="graphs/county-population-graph-config-prototype.json",OutputProductFormat="JSON")
# #
# # Convert the prototype graph into a template by replacing strings with ${Property} notation
# # - convert prototype LARIMER to property that can be filled by InfoMapper
# TextEdit(InputFile="graphs/county-population-graph-config-prototype.json",SearchFor="LARIMER",ReplaceWith="\$\{featureAttribute:county}",OutputFile="graphs/county-population-graph-config.json")
# # Always convert to Linux-like line endings if processing full lines to simplify processing
# # - TODO smalers 2020-06-22 this is actually not needed since not replacing entire line
# #TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="\r\n",ReplaceWith="\n",OutputFile="graphs/county-population-graph-config.json")
# # Edit TSID
# # - first part of the string will have been replaced above
# # - final step corrects a replace from previous steps
# # - uncomment DateValue version when that format is supported
# # TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year",ReplaceWith="Population\.Year~DateValue~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.dv",OutputFile="graphs/county-population-graph-config.json")
# # TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year.filled",ReplaceWith="Population\.Year\.filled~DateValue~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.filled\.dv",OutputFile="graphs/county-population-graph-config.json")
# #TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="dv.filled",ReplaceWith="filled\.dv",OutputFile="graphs/county-population-graph-config.json")
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year",ReplaceWith="Population\.Year~csv~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.csv",OutputFile="graphs/county-population-graph-config.json")
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="Population.Year.filled",ReplaceWith="Population\.Year\.filled~csv~ts/\$\{featureAttribute:county}\.DOLA\.Population\.Year\.filled\.csv",OutputFile="graphs/county-population-graph-config.json")
# TextEdit(InputFile="graphs/county-population-graph-config.json",SearchFor="csv.filled",ReplaceWith="filled\.csv",OutputFile="graphs/county-population-graph-config.json")
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200125 on localhost\CDSS
# HydroBase.db_version:  design version: 20191226  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20180529 on localhost\CDSS
# HydroBase.db_version:  design version: 20161025  last data change: 20180529
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
# 
# -----------------------------------------------------------------------------
# HydroBase database is: HydroBase_CO_20200720 on localhost\CDSS
# HydroBase.db_version:  design version: 20200720  last data change: 20200125
# HydroBase table structure for software is at least 2013040420130404
# HydroBase input name is "".
# Stored procedures are being used.
# -----------------------------------------------------------------------------
# 
#
Delimiter   = " "
NumTS       = 1
TSID        = "WELD.DOLA.Population.Year"
Alias       = "WELD-population"
Description = "WELD Population"
DataType    = "Population"
Units       = "persons"
MissingVal  = NaN
Start       = 1997
End         = 2049
#
# Time series comments/histories:
#
#
# Creation history for time series 1 (TSID=WELD.DOLA.Population.Year Alias=WELD-population):
#
#   Created new time series with interval determined from TSID "WELD.DOLA.Population.Year"
#
#EndHeader
Date "WELD-population, persons"
1997 166839.0000
1998 172393.0000
1999 NaN
2000 183074.0000
2001 NaN
2002 198975.0000
2003 NaN
2004 214069.0000
2005 NaN
2006 231283.0000
2007 NaN
2008 NaN
2009 NaN
2010 NaN
2011 NaN
2012 263841.0000
2013 NaN
2014 NaN
2015 NaN
2016 NaN
2017 304435.0000
2018 NaN
2019 NaN
2020 NaN
2021 NaN
2022 NaN
2023 366821.0000
2024 379013.0000
2025 391307.0000
2026 403718.0000
2027 NaN
2028 NaN
2029 NaN
2030 453421.0000
2031 NaN
2032 NaN
2033 NaN
2034 NaN
2035 NaN
2036 NaN
2037 NaN
2038 NaN
2039 567746.0000
2040 NaN
2041 NaN
2042 NaN
2043 NaN
2044 NaN
2045 NaN
2046 NaN
2047 670837.0000
2048 NaN
2049 696870.0000
